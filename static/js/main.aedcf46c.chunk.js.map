{"version":3,"sources":["components/timer/timer.component.jsx","components/custom-button/custom-button.component.jsx","components/answer-option/answer-option.component.jsx","components/answer-box/answer-box.component.jsx","components/question-body/question-body.component.jsx","components/question/question.component.jsx","data/questionSet.js","pages/quiz/quiz.page.jsx","pages/start/start.page.jsx","pages/end/end.page.jsx","App.js","serviceWorker.js","index.js"],"names":["Timer","secondsLeft","totalTime","timeUpAlert","progressBar","document","querySelector","style","background","flexBasis","className","id","CustomButton","text","onClickFunction","submitQuiz","onClick","AnswerOption","optionIndex","checked","selectOption","timeUp","correctAnswer","AnswerBox","props","index","setState","selected","state","alreadySelectedCorrect","increaseScore","decreaseScore","this","options","map","option","key","React","Component","QuestionBody","question","goToNext","lastQuestion","questionText","correctOption","Question","intervalID","setInterval","prevState","clearInterval","size","next","changeRoute","questionsList","Quiz","nextQuestion","currentQuestion","length","StartPage","src","alt","EndPage","score","totalScore","resetScore","performanceText","percentage","color","App","route","currentPage","content","QuestionsList","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aedcf46c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './timer.styles.scss';\r\n\r\nconst Timer = ({secondsLeft, totalTime, timeUpAlert}) =>  {\r\n    \r\n\r\n    const progressBar = document.querySelector('#filled');\r\n     \r\n     if(progressBar){\r\n        progressBar.style.background = 'purple';\r\n         progressBar.style.flexBasis = `${((secondsLeft/totalTime)*100)}%`;\r\n        \r\n        /* if(progressBar.style.flexBasis <= '30%'){\r\n            progressBar.style.background = 'red';\r\n         }*/\r\n         \r\n     }\r\n\r\n    return (\r\n\r\n            <div className='timer'>\r\n                <div className='clock'>\r\n                    <p>00:{secondsLeft>=10?secondsLeft:`0${secondsLeft}`}</p>\r\n                </div>\r\n                <div className='time-left'>\r\n                    <div className='bar'>\r\n                        <div id='filled'>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n                <h4>{timeUpAlert}</h4>\r\n            </div>\r\n)}\r\n    \r\n\r\n\r\nexport default Timer;","import  React from 'react';\r\n\r\nimport './custom-button.styles.scss';\r\n\r\nconst CustomButton = ({text, onClickFunction, submitQuiz}) => (\r\n    <div \r\n        className={`custom-button ${submitQuiz?'submit-quiz':null}`}\r\n        onClick={onClickFunction}\r\n    >\r\n        <span>{text}</span>\r\n    </div>\r\n)\r\n\r\nexport default CustomButton;","import React from 'react';\r\n\r\nimport './answer-option.styles.scss';\r\n\r\nconst AnswerOption = ({ optionIndex,text,checked, selectOption, timeUp, correctAnswer}) => (\r\n    <div className='answer-option'>\r\n        <label className={`container \r\n        \r\n            ${((optionIndex === correctAnswer) && timeUp )\r\n                ?'markGreen'\r\n                :''\r\n            }\r\n\r\n            ${\r\n                (checked && timeUp && (optionIndex !== correctAnswer))\r\n                ?'markRed'\r\n                :''\r\n            }\r\n            \r\n            `\r\n        }>\r\n            \r\n            <div className = 'answer-btn'>\r\n                 <div className={`custom-radio ${checked?'dark':'light'}`} onClick={(!timeUp)?selectOption:null} >\r\n                        <div className={(checked)?'check':''}>\r\n\r\n                        </div>\r\n                 </div>\r\n            </div>\r\n            <div className='answer-text'>\r\n                <h5>{text}</h5>\r\n            </div>\r\n        </label>\r\n    </div>\r\n)\r\n\r\nexport default AnswerOption;","import React from 'react';\r\n\r\nimport './answer-box.styles.scss';\r\nimport AnswerOption from '../answer-option/answer-option.component';\r\n\r\n \r\n\r\nclass AnswerBox extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n            selected: null,\r\n            alreadySelectedCorrect:false\r\n        }\r\n    }\r\n\r\n    selectOption = (index) => {\r\n        this.setState({\r\n            selected: index\r\n        },()=>{\r\n            if( this.state.selected >= 0){\r\n\r\n                if(this.state.selected === (this.props.correctAnswer) ){\r\n                      \r\n                      if(!this.state.alreadySelectedCorrect){\r\n                            this.setState({\r\n                                alreadySelectedCorrect:true\r\n                            },() => {\r\n                                this.props.increaseScore();\r\n                                if(this.props.correctAnswer === 1){\r\n                                \r\n                                }\r\n                            })\r\n                      }\r\n                      else{\r\n\r\n                      }\r\n                    \r\n                   \r\n                }\r\n\r\n                if(this.state.selected !== (this.props.correctAnswer) && this.state.alreadySelectedCorrect){\r\n                     this.props.decreaseScore()\r\n                    this.setState({\r\n                        alreadySelectedCorrect:false\r\n                    })\r\n                    \r\n                }\r\n                 \r\n            }\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        const {options, timeUp, correctAnswer} = this.props;\r\n\r\n         \r\n        return (\r\n            <div className='answer-box'>\r\n                {\r\n                    options.map((option,index) => (\r\n                        <AnswerOption\r\n                        key={ index} \r\n                         optionIndex={index}\r\n                        text={option} \r\n                        selectOption={()=>this.selectOption(index)} \r\n                        checked={this.state.selected === index}\r\n                        timeUp={timeUp}\r\n                        correctAnswer={correctAnswer}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default AnswerBox;","import React from 'react';\r\n\r\nimport './question-body.styles.scss';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport AnswerBox from '../answer-box/answer-box.component';\r\n\r\nclass QuestionBody extends React.Component{\r\n\r\n    render() {\r\n\r\n        const {question, timeUp, goToNext, lastQuestion, increaseScore, decreaseScore} = this.props;\r\n        return (\r\n            <div className='question-body'>\r\n                <div className='question-text'>\r\n                    <h3>Q. {question.questionText}</h3>\r\n                </div>\r\n                 <AnswerBox \r\n                    options = {question.options} \r\n                    correctAnswer={question.correctOption}\r\n                    timeUp={timeUp}\r\n                    increaseScore={increaseScore}\r\n                    decreaseScore={decreaseScore}\r\n                />\r\n                <div className='footer'>\r\n                    <CustomButton \r\n                    text={(lastQuestion)?'Submit':'Next'}\r\n                    onClickFunction={goToNext}\r\n                    submitQuiz={lastQuestion}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuestionBody;","import React from 'react';\r\n\r\nimport './question.styles.scss';\r\nimport Timer from '../timer/timer.component';\r\nimport QuestionBody from '../question-body/question-body.component';\r\n \r\n\r\nclass Question extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            secondsLeft:12,\r\n             \r\n        }\r\n    }\r\n\r\n\r\n     \r\n    \r\n\r\n    componentDidMount(){\r\n\r\n        this.intervalID = setInterval(()=> {\r\n\r\n            this.setState((prevState) => {\r\n\r\n                 return {\r\n                        secondsLeft: ( prevState.secondsLeft > 0)?prevState.secondsLeft - 1:0\r\n                  } \r\n            })\r\n\r\n        },1000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    render(){\r\n        \r\n        const timeUpAlert = this.state.secondsLeft === 0 ? 'Oops...Time Up!': `C'mon! You can do it!`;\r\n\r\n        const {id, size, question , next, increaseScore, decreaseScore} = this.props;\r\n\r\n        return(\r\n            <div className='question'>\r\n                 <Timer \r\n                 totalTime ={10}\r\n                 timeUpAlert ={timeUpAlert}\r\n                 secondsLeft={this.state.secondsLeft<=10? (this.state.secondsLeft):10}/>\r\n                { \r\n                    (this.state.secondsLeft>10)\r\n                    ?<h1>Loading...</h1>\r\n                    : <QuestionBody \r\n                            question={question}\r\n                            goToNext={()=> {\r\n\r\n                                    if(id< size-1){\r\n                                        this.setState({ secondsLeft: 12 });\r\n                                        next();\r\n                                        \r\n                                    }\r\n                                    else{\r\n            \r\n                                        this.props.changeRoute('end');\r\n                                    }\r\n                                \r\n                            }}\r\n                           \r\n                            lastQuestion={\r\n                                id === size-1\r\n                            }\r\n\r\n                            timeUp={this.state.secondsLeft <= 0}\r\n                            increaseScore={increaseScore}\r\n                            decreaseScore={decreaseScore}\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Question;","const questionsList = [\r\n    {\r\n        id:1,\r\n        questionText:'The football club FC Rostov belongs to:',\r\n        options:['Spain','Brazil','Russia','Germany'],\r\n        correctOption: 2 //index  of correct option in options array\r\n    },\r\n    {\r\n        id:2,\r\n        questionText:'The Capital of Argentina is:',\r\n        options:['Paris','Buenos Aires','Sao Paulo','Miami'],\r\n        correctOption: 1 //index of correct option in options array\r\n    },\r\n    {\r\n        id:3,\r\n        questionText:'The number of Union Territories in India ( in 2019 ) is:',\r\n        options:[ '9','6','7','8'],\r\n        correctOption: 0 //index of correct option in options array\r\n    },\r\n    {\r\n        id:4,\r\n        questionText:'The name of intelligence agency of United Kingdom is:',\r\n        options:['RAW','ISI','CIA','MI6'],\r\n        correctOption: 3//index of correct option in options array\r\n    },\r\n    \r\n   \r\n];\r\n\r\nexport default questionsList;","import React from 'react';\r\nimport Question from '../../components/question/question.component';\r\n\r\nimport './quiz.styles.scss';\r\nimport questionsList from '../../data/questionSet'  ;\r\n\r\n\r\n\r\nclass Quiz extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            \r\n            currentQuestion:0,\r\n           \r\n        }\r\n    }\r\n\r\n\r\n    nextQuestion =  () =>  {\r\n\r\n        \r\n        this.setState(prevState => {\r\n            return {\r\n                currentQuestion: (prevState.currentQuestion < questionsList.length-1)\r\n                                 ?  prevState.currentQuestion + 1\r\n                                 :  questionsList.length  - 1\r\n            }\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    render(){   \r\n        const {  currentQuestion} = this.state;\r\n         \r\n         return (\r\n            <div className='quiz'>\r\n                 \r\n                 <Question \r\n                    id={currentQuestion} \r\n                    size={questionsList.length} \r\n                    question = {questionsList[currentQuestion]} \r\n                    next={this.nextQuestion}\r\n                    changeRoute ={this.props.changeRoute}\r\n                    increaseScore={this.props.increaseScore}\r\n                    decreaseScore={this.props.decreaseScore}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\r\n\r\nimport './start.styles.scss';\r\n\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\n\r\nconst StartPage = ({changeRoute}) => (\r\n    <div className='start-page'>\r\n        <div className='header'>\r\n            <div className='profile-pic'>\r\n                <img src='https://robohash.org/8?set=set5' alt='profile'/>\r\n            </div>\r\n        </div>\r\n        <div className='footer'>\r\n            <CustomButton \r\n                text={`Let's Start!`}\r\n                onClickFunction={() => changeRoute('quiz')}\r\n                \r\n            />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default StartPage;","import React from 'react';\r\n\r\nimport './end.styles.scss';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\n\r\nconst EndPage= ({score, totalScore, changeRoute, resetScore}) => {\r\n    \r\n    let performanceText=null;\r\n    const percentage = (score/totalScore)*100;\r\n    if( percentage>=90){\r\n        performanceText= <h2 style={{color:'#43a047'}}> Amazing! </h2>\r\n    }\r\n    else if (  percentage < 90 && percentage>=70){\r\n        performanceText= <h2 style={{color:'#66bb6a'}}> Good!</h2>\r\n    }\r\n    else if( percentage < 70 && percentage >= 45){\r\n        performanceText = <h2 style={{color:'#ffa726'}}>{`Average :)`}</h2>\r\n    }\r\n    else {\r\n         performanceText = <h2 style={{color:'#f44336'}}>{`Below Average :(`}</h2>\r\n    }\r\n\r\n    return (\r\n     <div className='end-page'>\r\n        <div className='score'>\r\n            <h4>Your score is:</h4>\r\n            <h1>{score}/{totalScore}</h1>\r\n        </div>\r\n        <div className='performance'>\r\n            <h4>Your performance was:</h4>\r\n            {performanceText}\r\n        </div>\r\n        <div className='footer'>\r\n            <CustomButton\r\n                text={'Play Again'}\r\n                onClickFunction={()=> {\r\n                    changeRoute('start');\r\n                    resetScore();\r\n                }}\r\n            />\r\n        </div>\r\n    </div>\r\n)}\r\n\r\nexport default EndPage;","import React from 'react';\n\nimport './App.css';\n\nimport Quiz from './pages/quiz/quiz.page';\nimport StartPage from './pages/start/start.page';\nimport EndPage from './pages/end/end.page';\nimport QuestionsList from './data/questionSet';\n\nclass  App extends React.Component {\n  \n  constructor(){\n    super();\n\n    this.state={\n      currentPage:'start',\n      score:0,\n    }\n  }\n\n\n  changeRoute = (route ) => {\n    this.setState({currentPage: route})\n  }\n\n  resetScore =() => {\n    this.setState({\n      score:0\n    })\n    \n  }\n\n  increaseScore = () => {\n    this.setState(prevState => {\n      return {\n        score: prevState.score + 1\n      }\n    })\n  }\n\n  decreaseScore = () => {\n    this.setState(prevState => {\n      return {\n        score: prevState.score - 1\n      }\n    })\n  }\n  \n  render(){\n\n\n    const { score, currentPage } = this.state;\n\n   \n\n    let content = null;\n\n    if(currentPage === 'quiz'){\n      content = <Quiz changeRoute={this.changeRoute}  increaseScore={this.increaseScore} decreaseScore={this.decreaseScore}/>\n    }\n    else if(currentPage === 'end'){\n      content = <EndPage resetScore={this.resetScore} changeRoute={this.changeRoute} score={score} totalScore={QuestionsList.length} />;\n    }\n    else if( currentPage === 'start'){\n      content =  <StartPage changeRoute={this.changeRoute}/>\n    }\n\n    return (\n      <div className=\"App\">\n         \n          {content}\n          \n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}